from ipywidgets import (
    Widget, DOMWidget, widget_serialization, register
)
from ipywidgets.widgets.trait_types import TypedTuple
from traitlets import (
    Unicode, Int, CInt, Instance, ForwardDeclaredInstance, This, Enum,
    Tuple, List, Dict, Float, CFloat, Bool, Union, Any,
)

from .._base.Three import ThreeWidget
from .._base.uniforms import uniforms_serialization
from ..enums import *
from ..traits import *

from ..core.BaseBufferGeometry_autogen import BaseBufferGeometry

from ..core.BaseGeometry_autogen import BaseGeometry

@register
class EdgesGeometry(BaseBufferGeometry):
    """EdgesGeometry

    Autogenerated by generate-wrappers.js
    See https://threejs.org/docs/#api/geometries/EdgesGeometry
    """

    def __init__(self, geometry=None, thresholdAngle=1, **kwargs):
        kwargs['geometry'] = geometry
        kwargs['thresholdAngle'] = thresholdAngle
        super(EdgesGeometry, self).__init__(**kwargs)

    _model_name = Unicode('EdgesGeometryModel').tag(sync=True)

    geometry = Union([
        Instance(BaseGeometry, allow_none=True),
        Instance(BaseBufferGeometry, allow_none=True)
    ]).tag(sync=True, **widget_serialization)

    thresholdAngle = IEEEFloat(1, allow_none=False).tag(sync=True)

    type = Unicode("EdgesGeometry", allow_none=False).tag(sync=True)


import inspect
# Include explicit signature since the metaclass screws it up
EdgesGeometry.__signature__ = inspect.signature(EdgesGeometry.__init__)
